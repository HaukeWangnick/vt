#!/usr/bin/env python3

''' 
:mod:`vt-ext`
=============

Creates a new VT project directory based on an existing OVF.

This script is part of the Virtualization Toolkit.
'''

import sys
import os
import argparse

vtdir = os.path.dirname(os.path.realpath(sys.argv[0])) # We need realpath to follow the symlinks we created for Sphinx to destination
sys.path.append(os.path.join(vtdir,'pyutils'))
import argutils
import vtcommon

def main():
    ''' Parses command line arguments and creates VT project directory under the given name,
    reusing an existing OVF.
    Optionally prepares the directory for Git use.
    
    Call script without parameters to get usage information.'''
    
    ap = argparse.ArgumentParser(description='Create a new VT project directory based on an existing OVF')
    ap.add_argument('name',help='Name of the project (and of the project directory)',
            type=argutils.existingtype(False,'Project directory %s already exists'))
    ap.add_argument('ovf',help='Path of the OVF to base upon',
            type=argutils.existingtype(True,'OVF %s doesn\'t exist'))
    ap.add_argument('--local',action='store_true',
            help='Do not prepare the project for Git')
    args = ap.parse_args()

    vtcommon.projectinit(args.name,os.path.join(vtdir,'resources','vt-ext.template'),not args.local)

    # projectinit calls chdir into the new project directory
    try:
        os.symlink(args.ovf,'basevm.ovf')
    except OSError as exc:
        sys.exit('%s creating symlink to OVF'%exc)

if __name__ == "__main__":
    main()
